============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-8.3.4, pluggy-1.5.0 -- /root/.pyenv/versions/3.10.6/envs/taxifare-env/bin/python
cachedir: .pytest_cache
rootdir: /root/code/MonicaVenzor/07-ML-Ops/02-Cloud-training/data-train-in-the-cloud/tests
configfile: pytest_kitt.ini
collecting ... collected 9 items

tests/cloud_training/test_cloud_data.py::TestCloudData::test_big_query_dataset_variable_exists PASSED [ 11%]
tests/cloud_training/test_cloud_data.py::TestCloudData::test_cloud_data_create_dataset PASSED [ 22%]
tests/cloud_training/test_cloud_data.py::TestCloudData::test_cloud_data_create_table PASSED [ 33%]
tests/cloud_training/test_main.py::TestMain::test_route_preprocess FAILED [ 44%]
tests/cloud_training/test_main.py::TestMain::test_route_train[local] PASSED [ 55%]
tests/cloud_training/test_main.py::TestMain::test_route_train[gcs] PASSED [ 66%]
tests/cloud_training/test_main.py::TestMain::test_route_evaluate PASSED  [ 77%]
tests/cloud_training/test_main.py::TestMain::test_route_pred PASSED      [ 88%]
tests/cloud_training/test_vm.py::test_i_am_a_vm FAILED                   [100%]

=================================== FAILURES ===================================
________________________ TestMain.test_route_preprocess ________________________

self = <tests.cloud_training.test_main.TestMain object at 0x7fc11642c520>
fixture_query_1k =      fare_amount           pickup_datetime  ...  dropoff_latitude  passenger_count
0            8.9 2009-01-15 09:22:3...           4
454          8.5 2014-12-27 16:47:42+00:00  ...         40.771263                4

[455 rows x 7 columns]

    def test_route_preprocess(self, fixture_query_1k):
    
        from taxifare.interface.main import preprocess
    
        data_query_path = Path(LOCAL_DATA_PATH).joinpath("raw",f"query_{MIN_DATE}_{MAX_DATE}_{DATA_SIZE}.csv")
        data_processed_path = Path(LOCAL_DATA_PATH).joinpath("processed",f"processed_{MIN_DATE}_{MAX_DATE}_{DATA_SIZE}.csv")
    
        data_query_exists = data_query_path.is_file()
        data_processed_exists = data_processed_path.is_file()
    
        # SETUP
        if data_query_exists:
            shutil.copyfile(data_query_path, f'{data_query_path}_backup')
            data_query_path.unlink()
        if data_processed_exists:
            shutil.copyfile(data_processed_path, f'{data_processed_path}_backup')
            data_processed_path.unlink()
    
        # ACT
        # TODO: add try-except to be certain of reseting state if crash
        # Check route runs querying Big Query
>       preprocess(min_date=MIN_DATE, max_date=MAX_DATE)

tests/cloud_training/test_main.py:43: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
taxifare/interface/main.py:38: in preprocess
    data = get_data_with_cache(GCP_PROJECT, query, data_raw_path)
taxifare/ml_logic/data.py:58: in get_data_with_cache
    result = query_job.result()
/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/query.py:1595: in result
    do_get_result()
/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py:283: in retry_wrapped_func
    return retry_target(
/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/retry.py:190: in retry_target
    return target()
/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/query.py:1584: in do_get_result
    super(QueryJob, self).result(retry=retry, timeout=timeout)
/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/cloud/bigquery/job/base.py:971: in result
    return super(_AsyncJob, self).result(timeout=timeout, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = QueryJob<project=wagon-bootcamp-1849, location=EU, id=9da2f7d4-857d-4be7-98cf-e39be1f7446b>
timeout = None, retry = <google.api_core.retry.Retry object at 0x7fc116691120>

    def result(self, timeout=None, retry=DEFAULT_RETRY):
        """Get the result of the operation, blocking if necessary.
    
        Args:
            timeout (int):
                How long (in seconds) to wait for the operation to complete.
                If None, wait indefinitely.
    
        Returns:
            google.protobuf.Message: The Operation's result.
    
        Raises:
            google.api_core.GoogleAPICallError: If the operation errors or if
                the timeout is reached before the operation completes.
        """
        kwargs = {} if retry is DEFAULT_RETRY else {"retry": retry}
        self._blocking_poll(timeout=timeout, **kwargs)
    
        if self._exception is not None:
            # pylint: disable=raising-bad-type
            # Pylint doesn't recognize that this is valid in this case.
>           raise self._exception
E           google.api_core.exceptions.BadRequest: 400 Unrecognized name: c_pickup_datetime; Did you mean pickup_datetime? at [4:15]; reason: invalidQuery, location: query, message: Unrecognized name: c_pickup_datetime; Did you mean pickup_datetime? at [4:15]
E           
E           Location: EU
E           Job ID: 9da2f7d4-857d-4be7-98cf-e39be1f7446b

/root/.pyenv/versions/3.10.6/envs/taxifare-env/lib/python3.10/site-packages/google/api_core/future/polling.py:137: BadRequest
----------------------------- Captured stdout call -----------------------------
[34m
Loading TensorFlow...[0m

✅ TensorFlow loaded (1.17s)
[35m
 ⭐️ Use case: preprocess[0m
[34m
Load data from BigQuery server...[0m
----------------------------- Captured stderr call -----------------------------
2024-12-03 15:07:44.723704: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-12-03 15:07:44.794330: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory
2024-12-03 15:07:44.794364: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2024-12-03 15:07:44.808862: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-12-03 15:07:45.307233: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2024-12-03 15:07:45.307300: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2024-12-03 15:07:45.307318: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
________________________________ test_i_am_a_vm ________________________________

    def test_i_am_a_vm():
        """
        Test that this code is being run from a Google VM named as per env variable 'INSTANCE'
        """
    
>       assert platform.node() == INSTANCE, f"You should be running from your instance named '{INSTANCE}'."
E       AssertionError: You should be running from your instance named 'taxi-instance'.
E       assert 'DESKTOP-PKT1EMI' == 'taxi-instance'
E         
E         - taxi-instance
E         + DESKTOP-PKT1EMI

tests/cloud_training/test_vm.py:9: AssertionError
=========================== short test summary info ============================
FAILED tests/cloud_training/test_main.py::TestMain::test_route_preprocess - g...
FAILED tests/cloud_training/test_vm.py::test_i_am_a_vm - AssertionError: You ...
================== 2 failed, 7 passed, 18 warnings in 11.71s ===================
